{"version":3,"sources":["webpack://@clarkwinkelmann/clippy/webpack/bootstrap","webpack://@clarkwinkelmann/clippy/external \"flarum.core.compat['app']\"","webpack://@clarkwinkelmann/clippy/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/clippy/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@clarkwinkelmann/clippy/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/clippy/./src/admin/arrayOfStringsToSelectOptions.js","webpack://@clarkwinkelmann/clippy/./src/admin/index.js","webpack://@clarkwinkelmann/clippy/external \"flarum.core.compat['common/components/Select']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_extends","assign","target","arguments","length","source","apply","this","list","baseValues","options","forEach","AGENTS","EVENTS","app","initializers","add","agent","extend","ExtensionPage","attrs","id","hide","clippy","BASE_PATH","forum","attribute","load","data","settings","a","show","redraw","extensionData","registerSetting","type","setting","s3","translator","trans","jsdelivr","custom","default","label","href","rel","bidi","disabled","Select","component","arrayOfStringsToSelectOptions","onchange","validAnimations","animations","events","JSON","parse","eventName","animation","indexOf","text","stringify","e","fragment","map","none","stop","play","event","console","log","speak"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function (list, baseValues = {}) {\n    const options = {...baseValues};\n\n    list.forEach(value => {\n        options[value] = value;\n    });\n\n    return options;\n}\n","import app from 'flarum/app';\nimport Select from 'flarum/common/components/Select';\nimport {extend} from 'flarum/common/extend';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport arrayOfStringsToSelectOptions from './arrayOfStringsToSelectOptions';\n\n/* global m, clippy */\n\nconst AGENTS = [\n    'Clippy',\n    'Merlin',\n    'Rover',\n    'Links',\n    'Bonzi',\n    'F1',\n    'Genie',\n    'Genius',\n    'Peedy',\n    'Rocky',\n];\n\nconst EVENTS = [\n    'page.index',\n    'page.search',\n    'page.discussion',\n    'page.profile',\n    'page.tags',\n    'page.settings',\n    'modal.signup',\n    'modal.login',\n    'composer.discussion.open',\n    'composer.discussion.hide',\n    'composer.discussion.submit',\n    'composer.reply.open',\n    'composer.reply.hide',\n    'composer.reply.submit',\n    'action.subscription.follow',\n    'action.subscription.unfollow',\n    'action.subscription.notifications',\n    'action.likes.like',\n    'action.likes.unlike',\n];\n\napp.initializers.add('clarkwinkelmann-clippy', () => {\n    let agent;\n\n    extend(ExtensionPage.prototype, 'oninit', function () {\n        if (this.attrs.id !== 'clarkwinkelmann-clippy') {\n            return;\n        }\n\n        // In case we come back to the same page later\n        if (agent) {\n            agent.hide();\n        }\n\n        clippy.BASE_PATH = app.forum.attribute('clippyAgentPath');\n        clippy.load(app.data.settings['clippy.agent'] || 'Clippy', a => {\n            agent = a;\n            agent.show();\n\n            // To redraw the animation choices\n            m.redraw();\n        });\n    });\n\n    app.extensionData\n        .for('clarkwinkelmann-clippy')\n        .registerSetting({\n            type: 'select',\n            setting: 'clippy.cdn',\n            options: {\n                s3: app.translator.trans('clarkwinkelmann-clippy.admin.settings.cdn-options.s3'),\n                jsdelivr: app.translator.trans('clarkwinkelmann-clippy.admin.settings.cdn-options.jsdelivr'),\n                custom: app.translator.trans('clarkwinkelmann-clippy.admin.settings.cdn-options.custom'),\n            },\n            default: 's3',\n            label: app.translator.trans('clarkwinkelmann-clippy.admin.settings.cdn'),\n        })\n        .registerSetting(function () {\n            return m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-clippy.admin.settings.path')),\n                m('.helpText', app.translator.trans('clarkwinkelmann-clippy.admin.settings.path-help', {\n                    a: m('a', {\n                        href: 'https://github.com/smore-inc/clippy.js',\n                        target: '_blank',\n                        rel: 'noopener',\n                    }),\n                })),\n                m('input.FormControl', {\n                    type: 'text',\n                    bidi: this.setting('clippy.path'),\n                    disabled: this.setting('clippy.cdn')() !== 'custom',\n                }),\n            ]);\n        })\n        .registerSetting(function () {\n            return m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-clippy.admin.settings.agent')),\n                m('.helpText', app.translator.trans('clarkwinkelmann-clippy.admin.settings.agent-help')),\n                Select.component({\n                    value: this.setting('clippy.agent', 'Clippy')(),\n                    options: arrayOfStringsToSelectOptions(AGENTS),\n                    onchange: value => {\n                        this.setting('clippy.agent')(value);\n\n                        agent.hide();\n                        agent = null;\n\n                        clippy.load(value, a => {\n                            agent = a;\n                            agent.show();\n\n                            const validAnimations = agent.animations();\n\n                            try {\n                                const events = JSON.parse(this.setting('clippy.events')());\n\n                                if (typeof events === 'object') {\n                                    EVENTS.forEach(eventName => {\n                                        if (\n                                            events[eventName] &&\n                                            events[eventName].animation &&\n                                            validAnimations.indexOf(events[eventName].animation) === -1\n                                        ) {\n                                            if (events[eventName].text) {\n                                                delete events[eventName].animation;\n                                            } else {\n                                                delete events[eventName];\n                                            }\n                                        }\n                                    });\n\n                                    this.setting('clippy.events')(JSON.stringify(events));\n                                }\n                            } catch (e) {\n                                // do nothing, the settings are probably not set\n                            }\n\n                            // To redraw the animation choices\n                            m.redraw();\n                        });\n                    },\n                }),\n            ]);\n        })\n        .registerSetting(function () {\n            const settingsKey = 'clippy.events';\n            let events;\n\n            try {\n                events = JSON.parse(this.setting(settingsKey)());\n            } catch (e) {\n                // do nothing, we'll reset to something usable\n            }\n\n            if (typeof events !== 'object') {\n                events = {};\n            }\n\n            return m('.Form-group', m.fragment({\n                // Force a redraw of all the Select components otherwise there are issues with aligning options\n                key: this.setting('clippy.agent')() + (agent ? 'Loaded' : 'Loading'),\n            }, [\n                m('label', app.translator.trans('clarkwinkelmann-clippy.admin.settings.events')),\n                m('.helpText', app.translator.trans('clarkwinkelmann-clippy.admin.settings.events-help')),\n                m('table', [\n                    m('thead', m('tr', [\n                        m('th', app.translator.trans('clarkwinkelmann-clippy.admin.events.name')),\n                        m('th', app.translator.trans('clarkwinkelmann-clippy.admin.events.animation')),\n                        m('th', app.translator.trans('clarkwinkelmann-clippy.admin.events.text')),\n                    ])),\n                    m('tbody', EVENTS.map(eventName => m('tr', [\n                        m('td', m('pre', eventName)),\n                        m('td', Select.component({\n                            value: (events[eventName] && events[eventName].animation) || 'none',\n                            options: arrayOfStringsToSelectOptions(agent ? agent.animations() : [], {\n                                none: '---',\n                            }),\n                            onchange: value => {\n                                if (value === 'none') {\n                                    // If there's a text, we delete just the animation\n                                    // If there's neither text nor animation, we remove the whole event from the list\n                                    if (events[eventName].text) {\n                                        delete events[eventName].animation;\n                                    } else {\n                                        delete events[eventName];\n                                    }\n                                } else {\n                                    if (agent) {\n                                        agent.stop();\n                                        agent.play(value);\n                                    }\n\n                                    events[eventName] = events[eventName] || {};\n                                    events[eventName].animation = value;\n                                }\n\n                                this.setting(settingsKey)(JSON.stringify(events));\n                            },\n                        })),\n                        m('td', m('input.FormControl', {\n                            type: 'text',\n                            value: (events[eventName] && events[eventName].text) || '',\n                            onchange: event => {\n                                const {value} = event.target;\n\n                                if (value) {\n                                    if (agent) {\n                                        //agent.stop();\n                                        console.log('speak', agent, value);\n                                        agent.speak(value);\n                                    }\n\n                                    events[eventName] = events[eventName] || {};\n                                    events[eventName].text = value;\n                                } else {\n                                    if (events[eventName].animation) {\n                                        delete events[eventName].text;\n                                    } else {\n                                        delete events[eventName];\n                                    }\n                                }\n\n                                this.setting(settingsKey)(JSON.stringify(events));\n                            },\n                        })),\n                    ]))),\n                ]),\n            ]));\n        });\n});\n","module.exports = flarum.core.compat['common/components/Select'];"],"sourceRoot":""}